// Место для первой задачи
// 1) Создайте функцию, которая будет вычислять объем x**3
// и площадь полной поверхности куба S = 6x**2
//
// (тоже базовая математика, иногда используется в создании анимаций).
// Эта функция принимает в себя целое число со значением длины ребра куба.
// Ответ выведите в формате строки, который изображен в примерах.

// Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку "При вычислении произошла ошибка"

// НЕ ИСПОЛЬЗУЙТЕ ОПЕРАТОР СТЕПЕНИ ** - в онлайн среде браузера он не работает и тесты будут ломаться.
// Это из-за того, что этот оператор из более нового стандарта, чем тут доступен.

// Примеры:
// calculateVolumeAndArea(5)  => 'Объем куба: 125, площадь всей поверхности: 150'
// calculateVolumeAndArea(15)  => 'Объем куба: 3375, площадь всей поверхности: 1350'
// calculateVolumeAndArea(15.5)  => 'При вычислении произошла ошибка'
// calculateVolumeAndArea('15')  => 'При вычислении произошла ошибка'
// calculateVolumeAndArea(-15)  => 'При вычислении произошла ошибка'

function calculateVolumeAndArea(cubeEdge) {
  if (
    !Number.isInteger(cubeEdge) ||
    typeof cubeEdge !== 'number' ||
    cubeEdge < 0
  ) {
    return 'При вычислении произошла ошибка';
  }
  let cubeVolume = Math.pow(cubeEdge, 3);
  let cubeArea = 6 * Math.pow(cubeEdge, 2);

  return `Объем куба: ${cubeVolume}, площадь всей поверхности: ${cubeArea}`;
}

calculateVolumeAndArea(5);

//**** */

// Место для второй задачи
// 2) Напишите функцию, которая будет определять номер купе по переданному ей номеру места. Наглядно:

// Функция принимает только целое число от 1 до 36.
// Если переданный аргумент не число, отрицательное или дробное - возвращается сообщение:
// "Ошибка. Проверьте правильность введенного номера места"
// Если число 0 или больше 36, то сообщение: "Таких мест в вагоне не существует"

// Пример:
// getCoupeNumber(33)  => 9
// getCoupeNumber(7)  => 2
// getCoupeNumber(300)  => "Таких мест в вагоне не существует"
// getCoupeNumber(0)  => "Таких мест в вагоне не существует"
// getCoupeNumber(7.7)  => "Ошибка. Проверьте правильность введенного номера места"
// getCoupeNumber(-10)  => "Ошибка. Проверьте правильность введенного номера места"
// getCoupeNumber('Hello')  => "Ошибка. Проверьте правильность введенного номера места"

function getCoupeNumber(seatNum) {
  if (seatNum === 0 || seatNum > 36) {
    return 'Таких мест в вагоне не существует';
  }

  if (
    seatNum < 0 ||
    typeof seatNum !== 'number' ||
    !Number.isInteger(seatNum)
  ) {
    return 'Ошибка. Проверьте правильность введенного номера места';
  }

  return Math.ceil(seatNum / 4);
  // округление вверх. Округляет аргумент до ближайшего большего целого. в купе по 4 места.
}

getCoupeNumber(9);
